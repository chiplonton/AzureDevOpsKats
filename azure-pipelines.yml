trigger:
  branches:
    include:
    - master
    - develop
    - react
    - releases/*
    - feature*
  paths:
    exclude:
    - infastructure/*

variables:
  buildConfiguration: 'Release'

jobs:

- job: Linux 
  
  pool:
    vmImage: 'ubuntu-16.04'
  
  variables:
  - group: 'Docker Hub'
  
  steps:

  - script: |
      ./build.sh --target=CI-Build
    displayName: 'Cake Build'
  
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '.test-results/*.trx'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: 'cobertura-coverage.xml'

  - task: CopyFiles@2
    inputs:
      contents: 'publish/webapplication.zip'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: WebApplicationBundle

 # - task: DockerInstaller@0
 #   displayName: Docker Installer
 #   inputs:
 #     dockerVersion: 19.03.0-rc3
 #     releaseType: test

  - script: |
      docker -v
      apt-get purge docker-ce
      curl https://get.docker.com | CHANNEL=test sh
      sudo usermod -aG docker vsts
      ## linux-amd64
      wget -q https://github.com/docker/buildx/releases/download/v0.2.2/buildx-v0.2.2.linux-amd64
      sudo chmod 777 buildx-v0.2.2.linux-amd64
      mkdir -p ~/.docker/cli-plugins/
      mv buildx-v0.2.2.linux-amd64 ~/.docker/cli-plugins/docker-buildx
      ## linux/arm64 (TODO)
      ## linux/arm/v7 (TODO)
    displayName: 'Docker Install/buildx Plugin'


  - script: |
      docker -v
      docker buildx ls
      docker login -u $(dockerLogin) -p $(dockerPassword)
      docker buildx create --use --name multibuilder linux/amd64   
      docker buildx build --platform linux/amd64 -f docker/azuredevopskats-web-local.dockerfile/Dockerfile -t stuartshay/azuredevopskats:devops  --push .
      #https://www.mjpitz.com/blog/2019/05/07/docker-buildx/
      #docker buildx ls
      #docker buildx use multibuilder
      #docker buildx ls
      # https://medium.com/titansoft-engineering/docker-build-cache-sharing-on-multi-hosts-with-buildkit-and-buildx-eb8f7005918e
      # docker buildx build --platform linux/amd64,linux/arm64 linux/arm/v7 -f docker/azuredevopskats-web-local.dockerfile/Dockerfile -t stuartshay/azuredevopskats:devops  --push .
      #docker build -f docker/azuredevopskats-web-local.dockerfile/Dockerfile -t stuartshay/azuredevopskats:devops  .
      #docker push stuartshay/azuredevopskats:devops 
    displayName: 'Docker Build & Push'
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

- job: Windows

  pool:
    vmImage: 'windows-2019'
  variables:
  - group: 'Git Hub'

  steps:
  
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.300'

  - task: Cake@0
    inputs:
     script: 'build.cake'
     target: 'Generate-Docs'
     verbosity: 'Verbose'
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

  - task: GitHubPagesPublish@1
    inputs:
      docPath: 'docFx\_site\*'
      githubusername: $(git_username)
      githubemail: $(git_email)
      githubaccesstoken: $(Nukeeper_github_token)
      repositoryname: 'AzureDevOpsKats'
      branchname: 'gh-pages'
      commitmessage: 'Automated Release'
