trigger:
  branches:
    include:
    - master
    - develop
    - releases/*
    - feature*
  paths:
    exclude:
    - infastructure/*

variables:
  buildConfiguration: 'Release'

jobs:

- template: azure-pipelines.template.yml
  parameters:
    name: ubuntu_node_8
    vmImage: 'ubuntu-16.04'
    node_version: 8.x

- template: azure-pipelines.template.yml
  parameters:
    name: ubuntu_node_9
    vmImage: 'ubuntu-16.04'
    node_version: 9.x

- job: Linux 
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - bash:  |
      dotnet --info
      chmod +x build.sh 
      ./build.sh 
  - script: |
      docker login -u $(dockerLogin) -p $(dockerPassword)
      docker build -f docker/azuredevopskats-web-local.dockerfile/Dockerfile -t stuartshay/azuredevopskats:devops  .
      docker push stuartshay/azuredevopskats:devops 
    displayName: 'Docker Build/Deploy'
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

- job: MacOS
  pool:
    vmImage: 'xcode9-macos10.13'
 
  steps:
  
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.203'

  - bash:  |
      dotnet --info
      chmod +x build.sh 
      ./build.sh 
    displayName: 'Cake Build'
    env:
      COREHOST_TRACE: 0
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

- job: Windows
  pool: 
    vmImage: 'windows-2019'
  steps:
  
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.203'
  
  - powershell: |
      .\build.ps1
  - script: |
      docker login -u $(dockerLogin) -p $(dockerPassword)
      docker build -f docker/azuredevopskats-web-windows.dockerfile/Dockerfile -t stuartshay/azuredevopskats:devops-win  .
      docker push stuartshay/azuredevopskats:devops-win
    displayName: 'Docker Build/Deploy'
 