name: AWS ECR Deploy
env:
   AWS_ECR_REGISTRY: 816939196156.dkr.ecr.us-east-1.amazonaws.com
   AWS_ECR_REPOSITORY: azuredevopskats
   DOCKER_FILE: docker/azuredevopskats-web-multi.dockerfile/Dockerfile
   AWS_ECR_DOCKER_IMAGE: azuredevopskats
   AWS_ECR_DOCKER_IMAGE_TAG: 5.1-buildx-01  #-${{ github.sha }}
   BUILD_NUMBER: 01 ##${{ github.sha }}

on:
  workflow_dispatch:
  push:
   paths:
      - 'src/**'
      - 'test/**'
      - '.github/workflows/aws.yml'
   branches:
      - master
      - develop
      - 'feature/**'
      - 'fix/**'

jobs:

  test-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_AZUREKATS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_AZUREKATS }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  build:
    needs: test-aws
    runs-on: ubuntu-latest
    outputs:
      dotnet: ${{ steps.dotnet-version.outputs.dotnet }}
    strategy:
      matrix:
        dotnet: [ '5.0.x' ]

    steps:
      - id: dotnet-version
        run: echo "::set-output name=dotnet::${{ matrix.dotnet }}"

      - uses: actions/checkout@v2

      - name: Setup dotnet ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Install dependencies
        run: dotnet restore

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_AZUREKATS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_AZUREKATS }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
          file: ${{ env.DOCKER_FILE }}
          tags: ${{ env.AWS_ECR_DOCKER_IMAGE }}:${{ env.AWS_ECR_DOCKER_IMAGE_TAG }}
          outputs: type=docker,dest=image.tar
          #cache-from: type=registry,ref=${{ env.DH_DOCKER_IMAGE }}:buildcache
          #cache-to: type=registry,ref=${{ env.DH_DOCKER_IMAGE }}:buildcache,mode=max

